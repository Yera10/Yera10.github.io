<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Study on 이세상의 모든 노트</title><link>https://yera10.github.io/docs/mystudy/</link><description>Recent content in My Study on 이세상의 모든 노트</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://yera10.github.io/docs/mystudy/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://yera10.github.io/docs/mystudy/commands/conda/virtual_env/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/conda/virtual_env/</guid><description> 가상환경 생성 # conda create -n &amp;lt;가상환경명&amp;gt; conda create -n &amp;lt;가상환경명&amp;gt; python=3.7 conda create -n &amp;lt;가상환경명&amp;gt; --clone &amp;lt;가상환경명&amp;gt; 가상환경 목록 # conda env list conda info envs 가상환경에 jupyter kernel 연결 # python -m ipykernel install --user --name &amp;lt;가상환경명&amp;gt; --display-name &amp;lt;커널명&amp;gt; 가상환경 삭제 # conda remove --name {가상환경명} --all 가상환경 활성화 # conda activate {가상환경명} 가상환경 비활성화 # conda deactivate</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/docker/</guid><description> docker 버전 확인 # docker -v docker image 검색 및 설치 # docker search ubuntu docker pull ubuntu:20.04 컨테이너 생성 및 실행 # docker run -it --name &amp;lt;이름&amp;gt; &amp;lt;Image이름&amp;gt; /bin/bash 컨테이너 목록 확인 # docker ps --all</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/python-parameter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/python-parameter/</guid><description>python 실행파일 인자값 받기 # 1. sys.argv # test.py 가 아래와 같은 파일이고, import sys print(sys.argv) 아래 명령어를 실행하면, $ python test.py abc hello name 출력은 아래와 같다. [&amp;#39;test.py&amp;#39;, &amp;#39;abc&amp;#39;, &amp;#39;hello&amp;#39;, &amp;#39;name&amp;#39;] sys.argv는 리스트이고, [0]은 무조건 실행파일명, 그 다움 순서대로 입력받은 인자값이 리스트에 들어감 2. configparser # 아래와 같이 Section, Key, Value 값의 형태로 설정된 설정 파일을 사용 config file (확장자 .cfg) [SectionOne] # Section - 대괄호 Status: Single # 속성 - Key : Value Name: Derek Value: Yes Age: 30 [SectionTwo] FavoriteColor = Green # :(콜론)을 써도 되고, =(equal)을 써도 된다.</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/python-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/python-server/</guid><description> python 으로 http 서버 열기 # python3 -m http.server &amp;lt;포트번호 ex.8000&amp;gt;</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/python-venv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/python-venv/</guid><description>venv # python2에서는 써드파티 라이브러리인 virtualenv 가상환경 라이브러리를 사용
python3에서는 기본적으로 제공되는 venv 가상환경 라이브러리를 사용
가상환경 생성 # python -m venv &amp;lt;가상환경이름&amp;gt; 가상환경 활성화 # &amp;lt;가상환경이름&amp;gt;\Scripts\activate.bat 가상환경 삭제 # 가상환경 이름의 폴더를 휴지통으로 이동 (삭제)</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/terminal_theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/terminal_theme/</guid><description>터미널 테마 바꾸기 # https://terminalsplash.com/</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/etc/vscode_shortcuts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/etc/vscode_shortcuts/</guid><description> 내가 자주 쓰는 VSCode 단축키 # 설명 단축키 코드 전체 접기 Ctrl + k + 0 코드 전체 펼치기 Ctrl + k + j</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/git/cancel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/git/cancel/</guid><description> commit 취소 # # 꺽쇠 수만큼 전으로 돌아감 git reset HEAD^ git reset HEAD^^ # 숫자만큼 전으로 돌아감 git reset HEAD~1 git reset HEAD~2 commit 취소 - push 했을 때 # git reset HEAD^ # 원하는 시점으로 되돌리기 git reflog git reset {commit id} # 강제 푸시 git push origin {branch name} -f</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/git/clone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/git/clone/</guid><description> 클론 # git clone &amp;lt;REPO_URL&amp;gt; &amp;lt;DIR_생략가능&amp;gt;</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/git/credential/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/git/credential/</guid><description> Credential 정보를 반영구 저장 # git config credential.helper store</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/git/initial_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/git/initial_setup/</guid><description>모든 설정값 확인 # git config --list 특정값 확인
git config user.name 모든 설정값과 해당 위치 확인 # git config --list --show-origin 사용자 이름 및 이메일 설정 # git config --global user.name &amp;#34;Yera&amp;#34; git config --global user.email &amp;lt;이메일&amp;gt; * global 옵션을 전달할 경우 한번만 수행해도 된다.
설정값 지우기 # git config --unset user.name git config --unset user.email git config --unset --global user.name git config --unset --global user.email * global로 설정한 경우, global로 지워야 한다.</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/linux/background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/linux/background/</guid><description> 백그라운드 프로세스 목록 # jobs 출력
[job 번호]job기호 job상태 백그라운드 프로세스 종료 # kill %&amp;lt;job 번호&amp;gt;</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/linux/file_dir/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/linux/file_dir/</guid><description>파일 이동 # mv &amp;lt;이동전 파일 path&amp;gt; &amp;lt;이동후 파일 path&amp;gt; mv /home/index.html /home/test/index.html 파일 복사 # cp &amp;lt;복사전 파일 path&amp;gt; &amp;lt;복사후 파일 path&amp;gt; cp /home/index.html /home/test/index.html 디렉토리 이동 # mv &amp;lt;원본폴더&amp;gt; &amp;lt;목적지폴더&amp;gt; 디렉토리 복사 # cp -r &amp;lt;복사전 dir_path&amp;gt; &amp;lt;복사될 상위 dir_path&amp;gt; cp -r /home/index /home/test # home/test/index 폴더가 생성됨 디렉토리 생성 # mkdir &amp;lt;디렉토리명&amp;gt; 옵션 -m : 폴더 권한 설정 파일 삭제 # rm &amp;lt;파일명&amp;gt; 디렉토리 삭제 # rm -r &amp;lt;파일명&amp;gt; -r 옵션: recursive, 폴더를 지우거나 폴더 안의 파일을 전부 지울 때 -f 옵션 : 진짜로 지울거냐는 확인 없이 강제로 지움.</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/linux/gpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/linux/gpu/</guid><description> GPU 스펙 확인 # nvidia-smi 사용용량 확인 # nvidia-smi</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/linux/screen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/linux/screen/</guid><description> screen tool 설치 # sudo apt-get install screen screen 생성 # screen -S &amp;lt;생성할 스크린 이름&amp;gt; screen 나가기 # ctrl + a + d (단축키) screen 리스트 확인 # screen -ls 생성된 screen에 재접속 # screen -R &amp;lt;접속할 스크린 이름&amp;gt;</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/linux/zip_tar_gz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/linux/zip_tar_gz/</guid><description> 압축 해제 # tar -zxvf [압축파일] -C [폴더이름]</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/poetry/dependency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/poetry/dependency/</guid><description>poetry 그룹에 의존성 추가 # poetry add &amp;lt;패키지&amp;gt; --group &amp;lt;그룹명&amp;gt; poetry 버전 지정하여 의존성 추가 # poetry add &amp;#34;&amp;lt;패키지&amp;gt;&amp;lt;버전표기&amp;gt;&amp;#34; # 예 poetry add &amp;#34;selenium^4.10.0&amp;#34; # 가장 최신 버전 설치할 때 poetry add &amp;lt;패키지&amp;gt;@latest 버전 표기법 # ^1.2.3 : &amp;gt;=1.2.3 &amp;lt;2.0.0 ^1.2 : &amp;gt;=1.2.0 &amp;lt;2.0.0 ~2.0.5 : &amp;gt;=2.0.5, &amp;lt;2.1.0 &amp;gt;=2.0.5 ==2.0.5 설치된 모든 패키지 확인 # poetry show # 특정패키지를 지정 poetry show &amp;lt;패키지&amp;gt; # 의존성 트리 poetry show --tree 의존성 꼬였을 때 # 가상환경 삭제 poetry env remove --all pyproject.</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/poetry/export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/poetry/export/</guid><description> poetry 환경 requirements.txt로 내보내기 # # 기본 활용 방식 poetry export -f requirements.txt --output requirements.txt # 해시 정보 없이 export 하기 poetry export -f requirements.txt --output requirements.txt --without-hashes</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/poetry/poetry_start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/poetry/poetry_start/</guid><description>poetry 설치 (Windows) # pip으로 설치
pip install --user poetry powershell에서 아래 명령어로 설치
(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py - poetry 환경변수 등록 # windows
C:\Users\SEJONG\AppData\Roaming\Python\Scripts\ 또는 C:\Users\SEJONG\AppData\Roaming\Python\Python311\Scripts\ 또는 C:\Users\SEJONG\AppData\Roaming\pypoetry\venv\Scripts\ 에 poetry 가 있는지 확인 poetry가 있는 주소를 환경변수에 등록 poetry 시작 # poetry init 각 입력사항에 맞게 입력하면, pyproject.toml 생성됨
poetry config # # poetry 설정값 확인 poetry config --list # 프로젝트 폴더 내에 가상환경을 저장 poetry config virtualenvs.</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/poetry/virtual_env/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/poetry/virtual_env/</guid><description> 가상환경 비활성화 # deactivate exit poetry 가상환경 확인 # poetry env list 프로젝트 폴더 내에 가상환경을 저장 # poetry config virtualenvs.in-project true 가상환경 모두 삭제 # poetry env remove --all poetry 로 가상환경(virtualenv)을 관리 # poetry env use &amp;lt;파이썬경로&amp;gt;</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/commands/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/commands/readme/</guid><description>Git 관련 # commit 취소
credentail 관련
clone 관련
최초 설정 관련
Linux # 파일 생성/이동/복사/삭제
백그라운드 관련 명령어
Ubuntu Screen 명령어
GPU 관련
압축해제
conda # 가상환경 관련
Poetry # Poetry 시작하기
가상환경 관련
의존성 관련
내보내기(requirements.txt)
기타 # python3의 venv 사용법
python3 서버열기
python의 인자값 받기
Docker 명령어
VSCode 단축키
터미널 테마</description></item><item><title/><link>https://yera10.github.io/docs/mystudy/hidden/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/hidden/</guid><description>This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.
Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem.</description></item></channel></rss>