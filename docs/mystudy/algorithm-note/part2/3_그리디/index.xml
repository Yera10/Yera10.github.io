<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. 그리디 알고리즘 on 이세상의 모든 노트</title><link>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/</link><description>Recent content in 3. 그리디 알고리즘 on 이세상의 모든 노트</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/1%EC%9D%B4%EB%90%A0%EB%95%8C%EA%B9%8C%EC%A7%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/1%EC%9D%B4%EB%90%A0%EB%95%8C%EA%B9%8C%EC%A7%80/</guid><description>&lt;h1 id="1이-될-때까지">
 1이 될 때까지
 &lt;a class="anchor" href="#1%ec%9d%b4-%eb%90%a0-%eb%95%8c%ea%b9%8c%ec%a7%80">#&lt;/a>
&lt;/h1>
&lt;h3 id="input">
 INPUT
 &lt;a class="anchor" href="#input">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>2 &amp;lt;= N &amp;lt;= 100,000&lt;/li>
&lt;li>2 &amp;lt;= K &amp;lt;= 100,000&lt;/li>
&lt;li>N &amp;gt;= K&lt;/li>
&lt;/ul>
&lt;h3 id="output">
 OUTPUT
 &lt;a class="anchor" href="#output">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>N이 1이 될 때까지 수행해야 하는 과정의 최소 횟수 출력&lt;/li>
&lt;/ul>
&lt;h3 id="rule">
 Rule
 &lt;a class="anchor" href="#rule">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>둘 중 하나의 과정을 반복적으로 수행&lt;/li>
&lt;li>2번 과정은 N이 K로 나누어 떨어질 때만 선택 가능&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>N에서 1을 뺀다.&lt;/li>
&lt;li>N을 K로 나눈다.&lt;/li>
&lt;/ol>
&lt;h3 id="example">
 Example
 &lt;a class="anchor" href="#example">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">입력&lt;/th>
 &lt;th style="text-align: left">출력&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">25 5&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">17 4&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="my-solution">
 &lt;strong>My Solution&lt;/strong>
 &lt;a class="anchor" href="#my-solution">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>2번이 가능하면 2번을 수행하는 게 가장 빠른 방법&lt;/li>
&lt;li>연상되는 이유는 더 크게 줄어들기 때문에&lt;/li>
&lt;li>1번을 선택했을 때, 2번보다 빠르려면, 1번을 수행한 수가 K로 나누어 떨어질 때 =&amp;gt; 그러려면 K가 1이어야 한다? =&amp;gt; 하지만 $K&amp;gt;=2$ =&amp;gt; 불가능! 무조건 2번 먼저 수행&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># INPUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n, k &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SOLUTION&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(n, k):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> n &lt;span style="color:#f92672">%&lt;/span> k &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">//=&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OUTPUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(solution(n, k))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="정답코드">
 정답코드
 &lt;a class="anchor" href="#%ec%a0%95%eb%8b%b5%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>n, k &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SOLUTION&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(n, k):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> n &lt;span style="color:#f92672">%&lt;/span> k &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">//=&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">+=&lt;/span> (n &lt;span style="color:#f92672">%&lt;/span> k)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">-=&lt;/span> (n &lt;span style="color:#f92672">%&lt;/span> k)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OUTPUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(solution(n, k))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/%EC%88%AB%EC%9E%90%EC%B9%B4%EB%93%9C%EA%B2%8C%EC%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/%EC%88%AB%EC%9E%90%EC%B9%B4%EB%93%9C%EA%B2%8C%EC%9E%84/</guid><description>&lt;h1 id="숫자-카드-게임">
 숫자 카드 게임
 &lt;a class="anchor" href="#%ec%88%ab%ec%9e%90-%ec%b9%b4%eb%93%9c-%ea%b2%8c%ec%9e%84">#&lt;/a>
&lt;/h1>
&lt;h3 id="input">
 Input
 &lt;a class="anchor" href="#input">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>N, M : 숫자카드들의 행, 열의 개수, 첫째줄에 주어짐&lt;/li>
&lt;li>1 &amp;lt;= N, M &amp;lt;= 100&lt;/li>
&lt;li>각 카드에 적힌 숫자들, 둘째줄부터 주어짐&lt;/li>
&lt;li>1 &amp;lt;= 각 숫자 &amp;lt;= 10,000&lt;/li>
&lt;/ul>
&lt;h3 id="output">
 Output
 &lt;a class="anchor" href="#output">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>게임의 룰에 맞게 선택한 카드에 적힌 숫자&lt;/li>
&lt;/ul>
&lt;h3 id="rule">
 Rule
 &lt;a class="anchor" href="#rule">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>숫자카드들이 N x M 형태로 놓여있음&lt;/li>
&lt;li>뽑고자 하는 카드가 포함되어 있는 행 선택&lt;/li>
&lt;li>선택된 행에서 가장 작은 숫자카드를 뽑음&lt;/li>
&lt;li>어떤 행을 선택해야 가장 높은 숫자의 카드를 뽑을 수 있을까?&lt;/li>
&lt;/ol>
&lt;h3 id="example">
 Example
 &lt;a class="anchor" href="#example">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">입력&lt;/th>
 &lt;th style="text-align: left">출력&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">3 3 &lt;!-- raw HTML omitted --> 3 1 2 &lt;!-- raw HTML omitted --> 4 1 4 &lt;!-- raw HTML omitted --> 2 2 2&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">2 4 &lt;!-- raw HTML omitted --> 7 3 1 8 &lt;!-- raw HTML omitted --> 3 3 3 4&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="my-solution">
 &lt;strong>My Solution&lt;/strong>
 &lt;a class="anchor" href="#my-solution">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>행의 최솟값들 중 최댓값 출력&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># INPUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>N, M &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>arr &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(N):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arr&lt;span style="color:#f92672">.&lt;/span>append( list(map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SOLUTION&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(N, M, arr):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> max([min(a) &lt;span style="color:#66d9ef">for&lt;/span> a &lt;span style="color:#f92672">in&lt;/span> arr])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OUTPUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(solution(N, M, arr))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="정답코드">
 정답코드
 &lt;a class="anchor" href="#%ec%a0%95%eb%8b%b5%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>n, m &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> list(map(int, input()&lt;span style="color:#f92672">.&lt;/span>split()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> min_value &lt;span style="color:#f92672">=&lt;/span> min(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> max(result, min_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(result)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/%ED%81%B0%EC%88%98%EC%9D%98%EB%B2%95%EC%B9%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/mystudy/algorithm-note/part2/3_%EA%B7%B8%EB%A6%AC%EB%94%94/%ED%81%B0%EC%88%98%EC%9D%98%EB%B2%95%EC%B9%99/</guid><description>&lt;h1 id="큰-수의-법칙">
 큰 수의 법칙
 &lt;a class="anchor" href="#%ed%81%b0-%ec%88%98%ec%9d%98-%eb%b2%95%ec%b9%99">#&lt;/a>
&lt;/h1>
&lt;h3 id="input">
 Input
 &lt;a class="anchor" href="#input">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>N : 2 $\leq$ N $\leq$ 1,000, 배열의 크기&lt;/li>
&lt;li>M : 1 $\leq$ M $\leq$ 10,000, 숫자가 더해지는 횟수&lt;/li>
&lt;li>K : 1 $\leq$ K $\leq$ 10,000, 특정 인덱스의 수가 연속해서 더해질 수 있는 횟수&lt;/li>
&lt;li>array : 주어진 배열&lt;/li>
&lt;li>항상 K &amp;lt;= M&lt;/li>
&lt;/ul>
&lt;h3 id="큰-수의-법칙-1">
 큰 수의 법칙
 &lt;a class="anchor" href="#%ed%81%b0-%ec%88%98%ec%9d%98-%eb%b2%95%ec%b9%99-1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>배열의 숫자들을 M 번 더하여 가장 큰 수를 만드는 법칙&lt;/li>
&lt;li>&lt;strong>특정한 인덱스&lt;/strong>에 해당하는 수가 &lt;!-- raw HTML omitted -->&lt;strong>연속해서&lt;/strong>&lt;!-- raw HTML omitted --> K번을 초과하여 더해질 수 없다.&lt;/li>
&lt;/ul>
&lt;h3 id="output">
 Output
 &lt;a class="anchor" href="#output">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>큰 수의 법칙에 따른 결과&lt;/li>
&lt;/ul>
&lt;h3 id="example">
 Example
 &lt;a class="anchor" href="#example">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">N&lt;/th>
 &lt;th style="text-align: left">M&lt;/th>
 &lt;th style="text-align: left">K&lt;/th>
 &lt;th style="text-align: left">array&lt;/th>
 &lt;th style="text-align: left">result&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">8&lt;/td>
 &lt;td style="text-align: left">3&lt;/td>
 &lt;td style="text-align: left">2 4 5 4 6&lt;/td>
 &lt;td style="text-align: left">46&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">5&lt;/td>
 &lt;td style="text-align: left">7&lt;/td>
 &lt;td style="text-align: left">2&lt;/td>
 &lt;td style="text-align: left">3 4 3 4 3&lt;/td>
 &lt;td style="text-align: left">28&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>예시1 : 6 + 6 + 6 + 5 + 6 + 6 + 6 + 5 = 46&lt;/li>
&lt;li>예시2 : 4 + 4 + 4 + 4 + 4 + 4 + 4 = 28&lt;/li>
&lt;/ul>
&lt;h3 id="my-solution">
 &lt;strong>My Solution&lt;/strong>
 &lt;a class="anchor" href="#my-solution">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>최댓값과 그다음 최댓값 외에는 쓰이지 않음&lt;br>
왜냐하면, 최댓값을 K번 만큼 더한 다음에 그 다음 최댓값을 한 번 더 더하면 최댓값 연속 더한 횟수가 초기화 되기 때문에 다른 수를 더하는 것보다 큰 수를 만들 수 있음.&lt;/li>
&lt;li>최댓값 m1과 그 다음 최댓값 m2를 구한다.&lt;/li>
&lt;li>$m1 * K + m2$ 를 최대한 반복 =&amp;gt; $(m1\times K + m2)\times {M//(K+1)}$&lt;/li>
&lt;li>$m1$ 을 더할 수 있는 만큼 더해주기 =&amp;gt; $m1 \times {M%(K+1)}$&lt;br>
(최대 K번이기 때문에 연속해서 더하는 것 가능)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(N, M, K, arr):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m1 &lt;span style="color:#f92672">=&lt;/span> max(arr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arr&lt;span style="color:#f92672">.&lt;/span>remove(m1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m2 &lt;span style="color:#f92672">=&lt;/span> max(arr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> (M&lt;span style="color:#f92672">//&lt;/span>(K&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> (K &lt;span style="color:#f92672">*&lt;/span> m1 &lt;span style="color:#f92672">+&lt;/span> m2) &lt;span style="color:#f92672">+&lt;/span> sum(([m1] &lt;span style="color:#f92672">*&lt;/span> K &lt;span style="color:#f92672">+&lt;/span> [m2])[:M&lt;span style="color:#f92672">%&lt;/span>(K&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>python의 max 시간 복잡도 : $O(n)$&lt;/li>
&lt;li>python의 sort 시간 복잡도 : $O(n log n)$&lt;/li>
&lt;/ul>
&lt;h3 id="better-solution">
 &lt;strong>Better Solution&lt;/strong>
 &lt;a class="anchor" href="#better-solution">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(N, M, K, arr):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m1 &lt;span style="color:#f92672">=&lt;/span> max(arr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arr&lt;span style="color:#f92672">.&lt;/span>remove(m1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m2 &lt;span style="color:#f92672">=&lt;/span> max(arr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> (M&lt;span style="color:#f92672">//&lt;/span>(K&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> (K &lt;span style="color:#f92672">*&lt;/span> m1 &lt;span style="color:#f92672">+&lt;/span> m2) &lt;span style="color:#f92672">+&lt;/span> (M&lt;span style="color:#f92672">%&lt;/span>(K&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> m1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>