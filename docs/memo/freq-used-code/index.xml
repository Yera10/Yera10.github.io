<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>자주 쓰는 코드들 on 이세상의 모든 노트</title><link>https://yera10.github.io/docs/memo/freq-used-code/</link><description>Recent content in 자주 쓰는 코드들 on 이세상의 모든 노트</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://yera10.github.io/docs/memo/freq-used-code/index.xml" rel="self" type="application/rss+xml"/><item><title>간단한 히스토그램 python</title><link>https://yera10.github.io/docs/memo/freq-used-code/histogram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/histogram/</guid><description>import matplotlib.pyplot as plt plt.hist(data, bins=bin_num) import matplotlib.pyplot as plt import numpy as np cnts, bins = np.histogram(data, bin_num) plt.his(data, bins)</description></item><item><title>경고 무시 python</title><link>https://yera10.github.io/docs/memo/freq-used-code/warnings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/warnings/</guid><description> python 경고 무시하기 # import warnings warnings.filterwarnings(action=&amp;#39;ignore&amp;#39;)</description></item><item><title>시간 측정 python</title><link>https://yera10.github.io/docs/memo/freq-used-code/time/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/time/</guid><description> 코드 시간 측정하기 # import time start = time.time() ### 실행코드 ### end = time.time() print(end-start) # 초단위</description></item><item><title>예쁘게 출력(pprint) python</title><link>https://yera10.github.io/docs/memo/freq-used-code/pretty_print/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/pretty_print/</guid><description>import pprint pprint.pprint(복잡한 json, dict 파일 등)</description></item><item><title>파일 압축 python</title><link>https://yera10.github.io/docs/memo/freq-used-code/file_zip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/file_zip/</guid><description> 파일 압축 # import zipfile zf = zipfile.ZipFile(&amp;#39;.//foldername//filename.zip&amp;#39;, &amp;#39;w&amp;#39;) zf.write(&amp;#39;filepath&amp;#39;) # compress_type=zipfile.ZIP_DEFLATED zf.close() 압축 해제 후 DataFrame으로 변환 # import zipfile from pyarrow import csv zf = zipfile.ZipFile(&amp;#39;..//foldername//filename.zip&amp;#39;, &amp;#39;r&amp;#39;) df = csv.read_csv(zf.open(&amp;#39;content_hit-2021.03.csv&amp;#39;)).to_pandas()</description></item><item><title>파일 읽기 python</title><link>https://yera10.github.io/docs/memo/freq-used-code/file_open/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yera10.github.io/docs/memo/freq-used-code/file_open/</guid><description>내장함수 open으로 파일 읽기 (txt, csv, json) # readline readline( ) 함수 사용 # 제너레이터처럼 한줄씩 꺼내서 str 타입으로 읽어들인다.
(txt, csv, json 파일도 가능)
f = open(&amp;#34;d:\\data\\emp3.csv&amp;#34;, &amp;#34;r&amp;#34;) file = [] while True: line = f.readline() # readline: 한줄씩 읽어들임 if not line: break file.append(line) # readline: 한줄을 문자열로 반환 f.close() print(file) # file : [ str, str, ..., str ] 의 형태 readlines readlines( ) 함수 사용 # readline( ) 함수와는 다르게 list 타입으로 반환한다.</description></item></channel></rss>